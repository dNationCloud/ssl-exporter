#
# Copyright 2023 The dNation SSL Exporter authors. All Rights Reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

serviceMonitor:
  enabled: false
  # Automatically label with "release: {{ .Release.Name }}"
  # This label is used in dnation k8s monitoring stack
  releaseLabel: true
  # Extra labels to be identified by Prometheus
  extraLabels: {}
  # Metrics scrape interval
  scrapeInterval: 15s
  # Metrics scrape timeout
  scrapeTimeout: 14s
  # External URLs to scrape
  externalTargets: []
  # Kubeconfig files to scrape
  kubeconfigTargets:
  - /etc/kubernetes/admin.conf
  # Internal Kubernetes certificate (glob syntax suppoted)
  fileTargets:
  - "/etc/kubernetes/pki/**/*.crt"
  # Certificates within Kubernetes secrets in <namespace>/<secret> format (glob syntax suppoted)
  secretTargets: []
  # All secrets across all namespaces
  # - "*/*"
image:
  repository: ribbybibby/ssl-exporter
  pullPolicy: IfNotPresent
  # Image  tag. If not defined, app version is used
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
configMapName: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  roleName: ""
  roleBindingName: ""
podAnnotations: {}
podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsUser: 0
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9219
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


# To access Kubernetes  certificates, the pod needs to run on control-plane
nodeSelector:
  node-role.kubernetes.io/control-plane: ''
tolerations:
# these tolerations are to have the daemonset runnable on control plane nodes
# remove them if your control plane nodes should not run pods
- key: node-role.kubernetes.io/control-plane
  operator: Exists
  effect: NoSchedule
- key: node-role.kubernetes.io/master
  operator: Exists
  effect: NoSchedule
affinity: {}
